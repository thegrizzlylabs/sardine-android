//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.4-10/27/2009 06:09 PM(mockbuild)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.12.23 at 06:27:19 PM PST 
//


package com.thegrizzlylabs.sardineandroid.model;

import com.thegrizzlylabs.sardineandroid.util.ElementConverter;

import org.simpleframework.xml.Namespace;
import org.simpleframework.xml.Root;
import org.simpleframework.xml.convert.Converter;
import org.simpleframework.xml.stream.InputNode;
import org.simpleframework.xml.stream.OutputNode;
import org.w3c.dom.Element;


/**
 * <p>Java class for anonymous complex type.</p>
 *
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element ref="{DAV:}creationdate" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}displayname" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}getcontentlanguage" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}getcontentlength" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}getcontenttype" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}getetag" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}getlastmodified" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}lockdiscovery" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}resourcetype" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}supportedlock" minOccurs="0"/&gt;
 *         &lt;element ref="{DAV:}owner" minOccurs="0"/&gt;  &lt;!-- (for DAV:acl) --&gt;
 *         &lt;any/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@Root(strict = false)
@Namespace(prefix = "D", reference = "DAV:")
public class Property {

	private Element property;

	public Element getProperty() {
		return property;
	}

	public void setProperty(Element property) {
		this.property = property;
	}

	public static class PropertyConverter implements Converter<Property> {
		@Override
		public Property read(InputNode node) throws Exception {
			Property property = new Property();
			InputNode childNode = node.getNext();
			if (childNode != null) {
				property.setProperty(ElementConverter.read(childNode));
			}
			return property;
		}

		@Override
		public void write(OutputNode node, Property value) throws Exception {
			ElementConverter.write(node, value.property);
		}
	}

}
