buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

repositories {
    jcenter()
    google()
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    api 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'com.android.support:support-annotations:28.0.0'
    implementation ('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }

    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            if (project.hasProperty('gitVersion')) {
                version "$gitVersion"
            }
            groupId 'com.thegrizzlylabs.sardine-android'
            artifactId 'sardine-android'

            artifact bundleReleaseAar
            artifact sourcesJar

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    // Get Bintray credential from environment variable
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'sardine-android'
        userOrg = user
        licenses = ['Apache-2.0']
        desc = 'A WebDAV library for Android'
        vcsUrl = 'https://github.com/thegrizzlylabs/sardine-android.git'

        version {
            if (project.hasProperty('gitVersion')) {
                name = "$gitVersion" //Bintray logical version name
                vcsTag = "v$gitVersion"
            }
        }
    }
    publications = ['MyPublication']
}
